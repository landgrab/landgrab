# Based on;
# https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
# https://docs.publishing.service.gov.uk/manual/test-and-build-a-project-with-github-actions.html
# https://andycroll.com/ruby/github-actions-ci-for-rails-with-postgresql/
# https://docs.github.com/en/actions/guides/creating-postgresql-service-containers

name: Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432
      DEVISE_SECRET_KEY: devise-ci-secret-key
      STRIPE_SECRET_KEY: sk_test_abc123
      WHAT3WORDS_API_KEY: some-what3words-api-key

    services:
      postgres:
        # Docker Hub image (note: we use PostGIS which provides PostgreSQL with the relevant extension)
        image: postgis/postgis
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with: # uses version defined in `.ruby-version` file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install RGEO dependencies
      run: sudo apt-get install libgeos-dev -y

    - name: Create database
      # Environment variable used to create a new PostgreSQL client.
      run: |
        bundler exec rails db:setup

    - name: Run Rspec
      run: bin/rspec
